# Script PowerShell pour tester l'API Express et g√©n√©rer du trafic
# Utile pour la d√©mo Grafana

Write-Host "üöÄ Script de test de l'API Express" -ForegroundColor Cyan
Write-Host "G√©n√©ration de trafic pour la d√©mo monitoring" -ForegroundColor Yellow
Write-Host ""

$baseUrl = "http://localhost:3001"

# Fonction pour faire des requ√™tes HTTP
function Invoke-ApiRequest {
    param(
        [string]$Method,
        [string]$Url,
        [hashtable]$Body = $null
    )
    
    try {
        if ($Body) {
            $jsonBody = $Body | ConvertTo-Json
            $response = Invoke-RestMethod -Uri $Url -Method $Method -Body $jsonBody -ContentType "application/json" -ErrorAction Stop
        } else {
            $response = Invoke-RestMethod -Uri $Url -Method $Method -ErrorAction Stop
        }
        
        Write-Host "‚úÖ $Method $Url - " -NoNewline -ForegroundColor Green
        if ($response.message) {
            Write-Host $response.message -ForegroundColor White
        } else {
            Write-Host "Success" -ForegroundColor White
        }
        return $true
    } catch {
        $statusCode = $_.Exception.Response.StatusCode.value__
        Write-Host "‚ùå $Method $Url - HTTP $statusCode" -ForegroundColor Red
        return $false
    }
}

Write-Host "üìä Test de disponibilit√© de l'API..." -ForegroundColor Blue
try {
    $health = Invoke-RestMethod -Uri "$baseUrl/health" -Method GET
    Write-Host "‚úÖ API disponible - Uptime: $([math]::Round($health.uptime, 2))s" -ForegroundColor Green
} catch {
    Write-Host "‚ùå API non disponible sur $baseUrl" -ForegroundColor Red
    Write-Host "   Assurez-vous que l'application Express est d√©marr√©e" -ForegroundColor Yellow
    exit 1
}

Write-Host ""
Write-Host "üéØ D√©but des tests des 6 endpoints..." -ForegroundColor Blue
Write-Host ""

# Boucle de test pour g√©n√©rer du trafic
for ($i = 1; $i -le 50; $i++) {
    Write-Host "üì° S√©rie de tests #$i/50" -ForegroundColor Magenta
    
    # 1. Test endpoint d'accueil
    Invoke-ApiRequest -Method "GET" -Url "$baseUrl/"
    
    # 2. Test endpoint utilisateurs
    Invoke-ApiRequest -Method "GET" -Url "$baseUrl/api/users"
    
    # 3. Test cr√©ation utilisateur
    $userData = @{
        name = "Utilisateur Test $i"
        email = "test$i@example.com"
    }
    Invoke-ApiRequest -Method "POST" -Url "$baseUrl/api/users" -Body $userData
    
    # 4. Test endpoint produits
    Invoke-ApiRequest -Method "GET" -Url "$baseUrl/api/products"
    
    # 5. Test endpoint commandes
    Invoke-ApiRequest -Method "GET" -Url "$baseUrl/api/orders"
    
    # 6. Test endpoint paiement
    $paymentData = @{
        amount = [math]::Round((Get-Random -Minimum 10 -Maximum 500), 2)
        card_token = "tok_" + (Get-Random -Maximum 99999).ToString("00000")
    }
    Invoke-ApiRequest -Method "POST" -Url "$baseUrl/api/payment" -Body $paymentData
    
    # Test d'un endpoint inexistant (g√©n√®re des 404)
    if ($i % 10 -eq 0) {
        Write-Host "üîç Test endpoint inexistant..." -ForegroundColor Gray
        Invoke-ApiRequest -Method "GET" -Url "$baseUrl/api/nonexistent"
    }
    
    # Petite pause entre les s√©ries
    Start-Sleep -Milliseconds (Get-Random -Minimum 100 -Maximum 500)
    
    if ($i % 10 -eq 0) {
        Write-Host ""
        Write-Host "üìà V√©rifiez vos dashboards Grafana !" -ForegroundColor Yellow
        Write-Host "   üîπ Syst√®me: http://localhost:3000/d/system_monitoring_complete" -ForegroundColor Cyan
        Write-Host "   üîπ Express: http://localhost:3000/d/express_app_monitoring" -ForegroundColor Cyan
        Write-Host ""
    }
}

Write-Host ""
Write-Host "üéâ Test termin√© !" -ForegroundColor Green
Write-Host ""
Write-Host "üìä DASHBOARDS DISPONIBLES:" -ForegroundColor Yellow
Write-Host "   üñ•Ô∏è  Monitoring Syst√®me:     http://localhost:3000/d/system_monitoring_complete" -ForegroundColor White
Write-Host "   üöÄ Monitoring Express App: http://localhost:3000/d/express_app_monitoring" -ForegroundColor White
Write-Host "   üìà Prometheus Targets:     http://localhost:9090/targets" -ForegroundColor White
Write-Host "   üîç API Documentation:      http://localhost:3001/" -ForegroundColor White
Write-Host ""
Write-Host "üí° Pour plus de trafic, relancez ce script !" -ForegroundColor Cyan 